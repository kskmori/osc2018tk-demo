# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
  config.vm.box_version = "1804.02"

  # VirtualBox
  config.vm.provider :virtualbox do |v|
    #v.customize ["modifyvm", :id, "--memory", "2048"]
    v.memory = 2048
  end

  config.vm.define "master" do |master|
    master.vm.hostname = "master"
    master.vm.network "private_network", ip: "192.168.33.10"
    master.vm.network "forwarded_port", id: "ssh", guest: 22, host: 2220
    master.vm.provider :virtualbox do |v|
      v.name = "master"
    end
  end

  config.vm.define "worker1" do |worker1|
    worker1.vm.hostname = "worker1"
    worker1.vm.network "private_network", ip: "192.168.33.101"
    worker1.vm.network "forwarded_port", id: "ssh", guest: 22, host: 2221
    worker1.vm.provider :virtualbox do |v|
      v.name = "worker1"
    end
  end

  config.vm.define "worker2" do |worker2|
    worker2.vm.hostname = "worker2"
    worker2.vm.network "private_network", ip: "192.168.33.102"
    worker2.vm.network "forwarded_port", id: "ssh", guest: 22, host: 2222
    worker2.vm.provider :virtualbox do |v|
      v.name = "worker2"
    end
  end

  # enable proxy during the provisioning
  if ENV['http_proxy']
    config.vm.provision "shell",
      inline: "echo 'export http_proxy=" + ENV['http_proxy'] + "' >>/etc/environment"
    config.vm.provision "shell",
      inline: "echo 'export https_proxy=" + ENV['https_proxy'] + "' >>/etc/environment"
  end

  # for sharing demo scenario
  #   installing sshfs fails on the proxy environment because
  #   it runs before proxy settings in the provisioning
  #   workaround is to use rsync on the proxy environment for now
  #   NOTE: you need to run 'vagrant rsync' after provision to sync the generated private keys
  if ENV['http_proxy']
    config.vm.synced_folder "../", "/osc2018tk-demo", type: "rsync"
    # .vagrant is always excluded but we intentionally sync the private keys for ssh access
    config.vm.synced_folder "./.vagrant", "/osc2018tk-demo/vagrant/.vagrant", type: "rsync"
  else
    config.vm.synced_folder "../", "/osc2018tk-demo", type: "sshfs"
  end

  # Provision
  config.vm.provision "ansible" do |ansible|
    ansible.host_key_checking = false
    # at least one playbook needs to be run to generate ssh keys for ansible
    #ansible.playbook = "generate-inventory.yml"
    # for running demo scenario
    ansible.playbook = "demo-scenario.yml"
  end

end
